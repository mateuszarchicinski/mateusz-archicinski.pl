//~~~~~~~~~~~~~~~~~~~~~~//
//~~~~~~* MIXINS *~~~~~~//+
//~~~~~~~~~~~~~~~~~~~~~~//


// Comment
@mixin comment($text) {
/*------------------------
    #{to-upper-case($text)}
------------------------*/
}


// Font face
@mixin font-face($name, $path, $style: null, $weight: null, $exts: eot svg ttf woff woff2) {
    $src: null;
    
    $extmods: (
        eot: "?",
        svg: "#" + str-replace($name, " ", "_")
    );
    
    $formats: (
        otf: "opentype",
        ttf: "truetype"
    );
    
    @each $ext in $exts {
        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
        $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }
    
    @font-face {
        font-family: quote($name);
        font-style: $style;
        font-weight: $weight;
        src: $src;
    }
}


// Box sizing
@mixin box-sizing($type) {
    -webkit-box-sizing: $type;
    -moz-box-sizing: $type;
    box-sizing: $type;
}


// Before
@mixin before {
    &::before {
        @content;
    };
}


// After
@mixin after {
    &::after {
        @content;
    };
}


// Before - After
@mixin before-after {
    &::before,
    &::after {
        @content;
    };
}


// Placeholder
@mixin placeholder {
    &::placeholder {
        @content;
    };
}


// Clearfix
@mixin clearfix {
    &::before,
    &::after {
        content: "";
        display: table;
    }
    
    &::after {
        clear: both;
    }
}


// No text
@mixin no-text {
    line-height: 0;
    font-size: 0;
    text-shadow: none;
    color: transparent;
}


// Opacity
@mixin opacity($value) {
    $IEValue: $value * 100;
    opacity: $value;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $IEValue + ")";
    filter: alpha(opacity=$IEValue);
}


// Transform
@mixin transform($transforms) {
    transform: $transforms;
    will-change: transform;
}


// Scale
@mixin scale($scale) {
    @include transform(scale($scale));
}


// Both center
@mixin both-center($top: -50%, $left: -50%, $position: relative) {
    position: $position;
    top: 50%;
    left: 50%;

    @include transform(translate($top, $left));
}


// Transition
@mixin transition($props: all, $speed: 0.25s, $easing: linear) {
    transition: $props $speed $easing;
}


// Keyframes
@mixin keyframes($name) {
    @keyframes #{$name} {
        @content;
    }
}